# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Please update this key. ex) sbt playUpdateSecret
play.http.cookies.strict = false
play.http.secret.key="MQ<@wgt:@D7ebjI=AA>SSN=b8a>YMZ7LTGEipBS>fF[P>:OXNMb;?fbk02rfr7p^"
play.http.filters= "filters.Filters"
play.filters.enabled += "play.filters.gzip.GzipFilter"
play.filters.enabled += "play.filters.csrf.CSRFFilter"

play.filters.gzip {
  contentType {
    # If non empty, then a response will only be compressed if its content type is in this list.
    whiteList = [ "text/*", "application/javascript", "application/json" ]

    # The black list is only used if the white list is empty.
    # Compress all responses except the ones whose content type is in this list.
    blackList = []
  }
}

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["192.168.56.129:9000", "localhost:9000"]
}

play.filters.headers.contentSecurityPolicy = null

# The application languages
# ~~~~~
play.i18n.langs=["en", "ja", "ja-JP"]

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

application.global = filters.Global

application.root=./

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}


play.assets {
  path = "/public"
  urlPrefix = "/assets"
}


# Evolutions
play.evolutions.db.default.autoApply=true
play.evolutions.db.default.enabled=true

slick.dbs {
  in_house {
    profile = "slick.jdbc.MySQLProfile$"
    db {
      driver = com.mysql.jdbc.Driver
      url = "jdbc:mysql://xx.xx.xx.xx/in_house?characterEncoding=UTF8&autoReconnect=true&useSSL=false"
      user = "xxxxx"
      password = "xxxxx#"
    }
  }
  second {
    profile = "slick.jdbc.MySQLProfile$"
    db {
      driver = com.mysql.jdbc.Driver
      url = "jdbc:mysql://xx.xx.xx.xx/second?characterEncoding=UTF8&autoReconnect=true&useSSL=false"
      user = "xxxx"
      password = "xxxx#"
    }
  }
}


google.oauth{
  apiUrl = "https://accounts.google.com/o/oauth2/v2/auth"
  clientId = "xxxxxx"
  responseType ="code"
  scope ="openid%20email"
  redirectUri="http://localhost:9000/api/v1/auth/google"
  clientSecret="xxxxxxxx"
  request.timeout=3000
  grant_type="authorization_code"
  token_endpoint="https://www.googleapis.com/oauth2/v4/token"
  token_info_endpoint="https://www.googleapis.com/oauth2/v1/tokeninfo"
}